
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT CTE_STRING C_ABRACKET C_CBRACKET C_PARENTHESIS DIVIDE ELSE EQUAL FLOAT FOR FUNCTION GREATER GREATER_EQUAL ID IF INT LESSER LESSER_EQUAL LET MAIN MINUS MODULE NOT_EQUAL OR O_ABRACKET O_CBRACKET O_PARENTHESIS PLUS PROGRAM READ RETURN SEMICOLON STRING TIMES TO VOID WHILE WRITE\n\tprograma : PROGRAM ID SEMICOLON declaracion_global funcion main bloque\n\t\n\tmain : MAIN O_PARENTHESIS C_PARENTHESIS\n\t\n\tbloque : O_CBRACKET bloque_prime C_CBRACKET\n\t\n\tbloque_prime : estatuto bloque_prime\n\t\t\t\t | epsilon\n\t\n\tdeclaracion_funcion : declaracion\n\t\t\t\t\t\t| epsilon\n\t\n\tdeclaracion_global : declaracion\n\t\n\tdeclaracion : declaracion_base\n\t\t\t\t| declaracion_base declaracion\n\t\n\tdeclaracion_base : LET declaracion_prime COLON declaracion_tipo SEMICOLON\n\t\n\tdeclaracion_prime : declaracion_variable\n\t\t\t\t\t  | declaracion_variable COMMA declaracion_prime\n\t\n\tdeclaracion_variable : ID O_ABRACKET CTE_INT C_ABRACKET O_ABRACKET CTE_INT C_ABRACKET O_ABRACKET CTE_INT C_ABRACKET\n\t\t\t\t\t\t | ID O_ABRACKET CTE_INT C_ABRACKET O_ABRACKET CTE_INT C_ABRACKET\n\t\t\t\t\t\t | ID O_ABRACKET CTE_INT C_ABRACKET\n\t\t\t\t\t\t | ID \n\t\n\tdeclaracion_tipo : INT\n\t\t\t\t\t | FLOAT\n\t\t\t\t\t | CHAR\n\t\t\t\t\t | STRING\n\t\n\tparam_tipo : INT ID\n\t\t \t   | FLOAT ID\n\t\t \t   | CHAR ID\n\t\t \t   | STRING ID\n\t\n\tfuncion : funcion_base funcion\n\t\t\t| epsilon\n\t\n\tfuncion_base : FUNCTION funcion_ident O_PARENTHESIS funcion_prime C_PARENTHESIS declaracion_funcion bloque\n\t\n\tfuncion_prime : param_tipo\n\t\t\t\t  | param_tipo COMMA funcion_prime\n\t\n\tfuncion_ident : VOID ID\n \t\t\t\t  | INT ID\n\t\t\t\t  | FLOAT ID\n\t\t\t\t  | CHAR ID\n\t\t\t\t  | STRING ID\n\t\n\tvariable : var_array\n\t\t\t | ID \n\t\n\tvar_array : arr_id O_ABRACKET exp arr_close_bracket arr_open_bracket exp arr_close_bracket arr_open_bracket exp arr_close_bracket\n\t\t\t  | arr_id O_ABRACKET exp arr_close_bracket arr_open_bracket exp arr_close_bracket\n\t\t\t  | arr_id O_ABRACKET exp arr_close_bracket\n\t\n\tarr_id : ID\n\t\n\tarr_close_bracket : C_ABRACKET\n\t\n\tarr_open_bracket : O_ABRACKET\n\t\n\testatuto : asignacion SEMICOLON\n\t\t\t | llamada SEMICOLON\n\t\t\t | retorno SEMICOLON\n\t\t\t | lectura SEMICOLON\n\t\t\t | escritura SEMICOLON\n\t\t\t | decision\n\t\t\t | while\n\t\t\t | for\n\t\n\tasignacion : variable ASSIGN asignacion_expr\n\t\n\tasignacion_expr : expr\n\t\n\tllamada : function_id O_PARENTHESIS llamada_prime C_PARENTHESIS\n\t\n\tfunction_id : ID\n\t\n\tllamada_prime : llamada_exp\n\t\t\t\t  | llamada_exp llamada_comma llamada_prime\n\t\n\tllamada_exp : exp\n\t\n\tllamada_comma : COMMA\n\t\n\tretorno : RETURN expr\n\t\n\tlectura : READ O_PARENTHESIS lectura_prime C_PARENTHESIS\n\t\n\tlectura_prime : variable\n\t\t\t\t  | variable COMMA lectura_prime\n\t\n\tescritura : WRITE O_PARENTHESIS escritura_prime C_PARENTHESIS\n\t\n\tescritura_prime : expr\n\t\t\t\t\t| escritura_string\n\t\t\t\t\t| expr COMMA escritura_prime\n\t\t\t\t\t| escritura_string COMMA escritura_prime\n\t\n\tescritura_string : CTE_STRING\n\t\n\tdecision : IF O_PARENTHESIS decision_expr C_PARENTHESIS bloque else\n\t\n\tdecision_expr : expr\n\t\n\telse : else_prime bloque\n\t\t | epsilon\n\t\n\telse_prime : ELSE\n\t\n\twhile : while_prime while_expr bloque\n\t\n\twhile_prime : WHILE\n\t\n\twhile_expr : O_PARENTHESIS expr C_PARENTHESIS\n\t\n\tfor : FOR for_asignacion for_to for_exp bloque\n\t\n\tfor_asignacion : variable ASSIGN for_asignacion_expr\n\t\n\tfor_asignacion_expr : expr\n\t\n\tfor_to : TO\n\t\n\tfor_exp : exp\n\t\n\texpr : or\n\t\n\tor : and\n\t   | and or_operador or\n\t\n\tor_operador : OR\n\t\n\tand : equal\n\t\t| equal and_operador and\n\t\n\tand_operador : AND\n\t\n\tequal : compare\n\t\t  | compare equal_operador compare\n\t\n\tequal_operador : EQUAL\n\t\t\t\t   | NOT_EQUAL\n\t\n\tcompare : exp\n\t\t\t| exp compare_operador exp\n\t\n\tcompare_operador : GREATER\n\t\t\t\t\t | LESSER\n\t\t\t\t\t | GREATER_EQUAL\n\t\t\t\t\t | LESSER_EQUAL\n\t\n\texp : termino\n\t\t| termino exp_operador exp\n\t\n\texp_operador : PLUS\n\t\t\t | MINUS\n\t\n\ttermino : factor\n\t\t\t| factor termino_operador termino\n\t\n\ttermino_operador : TIMES\n\t\t\t\t\t | DIVIDE\n\t\t\t\t\t | MODULE\n\t\n\tfactor : variable\n\t\t   | O_PARENTHESIS expr C_PARENTHESIS\n\t\t   | llamada retorno_llamada\n\t\t   | cte\n\t\t   | PLUS cte\n\t\t   | MINUS cte\n\t\n\tretorno_llamada : epsilon\n\t\n\tcte : CTE_INT\n\t\t| CTE_FLOAT\n\t\n\tepsilon :\n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,29,77,],[0,-1,-3,]),'ID':([2,8,21,22,23,24,25,27,30,46,53,54,55,58,63,71,72,73,74,77,79,80,81,82,83,84,85,95,102,103,104,106,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,155,157,158,159,167,168,177,179,180,195,196,197,198,200,202,206,209,],[3,16,33,34,35,36,37,16,65,65,-49,-50,-51,65,109,113,114,115,116,-3,-44,-45,-46,-47,-48,65,65,65,109,65,65,65,65,65,-86,65,-89,65,-92,-93,65,-96,-97,-98,-99,65,-102,-103,65,-106,-107,-108,-75,65,-81,65,65,-59,109,65,65,-118,-78,-43,65,-70,-73,-72,65,]),'SEMICOLON':([3,38,39,40,41,42,48,49,50,51,52,64,65,86,87,88,89,90,91,92,93,94,96,97,100,101,118,119,143,144,145,146,166,169,170,171,172,173,174,175,176,178,187,188,207,211,],[4,75,-18,-19,-20,-21,79,80,81,82,83,-36,-37,-60,-83,-84,-87,-90,-94,-100,-104,-109,-118,-112,-116,-117,-52,-53,-111,-115,-113,-114,-54,-85,-88,-91,-95,-101,-105,-110,-61,-64,-40,-42,-39,-38,]),'LET':([4,7,75,111,],[8,8,-11,8,]),'FUNCTION':([5,6,7,10,13,75,77,189,],[12,-8,-9,12,-10,-11,-3,-28,]),'MAIN':([5,6,7,9,10,11,13,19,75,77,189,],[-118,-8,-9,18,-118,-27,-10,-26,-11,-3,-28,]),'O_CBRACKET':([7,13,17,64,65,68,75,92,93,94,96,97,100,101,105,111,143,144,145,146,161,162,163,166,173,174,175,181,182,183,184,187,188,201,203,207,211,],[-9,-10,30,-36,-37,-2,-11,-100,-104,-109,-118,-112,-116,-117,30,-118,-111,-115,-113,-114,30,-6,-7,-54,-101,-105,-110,30,-77,30,-82,-40,-42,30,-74,-39,-38,]),'VOID':([12,],[21,]),'INT':([12,26,32,112,],[22,39,71,71,]),'FLOAT':([12,26,32,112,],[23,40,72,72,]),'CHAR':([12,26,32,112,],[24,41,73,73,]),'STRING':([12,26,32,112,],[25,42,74,74,]),'COLON':([14,15,16,43,76,190,208,],[26,-12,-17,-13,-16,-15,-14,]),'COMMA':([15,16,64,65,70,76,87,88,89,90,91,92,93,94,96,97,100,101,109,113,114,115,116,121,122,143,144,145,146,148,150,151,152,166,169,170,171,172,173,174,175,187,188,190,207,208,211,],[27,-17,-36,-37,112,-16,-83,-84,-87,-90,-94,-100,-104,-109,-118,-112,-116,-117,-37,-22,-23,-24,-25,168,-58,-111,-115,-113,-114,177,179,180,-69,-54,-85,-88,-91,-95,-101,-105,-110,-40,-42,-15,-39,-14,-38,]),'O_ABRACKET':([16,65,67,76,109,187,188,190,207,],[28,-41,110,117,-41,197,-42,199,197,]),'O_PARENTHESIS':([18,20,33,34,35,36,37,57,58,59,60,61,62,65,66,84,85,95,103,104,106,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,157,158,159,167,168,179,180,197,198,209,],[31,32,-31,-32,-33,-34,-35,85,95,102,103,104,106,-55,-76,95,95,95,95,95,95,95,95,-86,95,-89,95,-92,-93,95,-96,-97,-98,-99,95,-102,-103,95,-106,-107,-108,95,-81,95,95,-59,95,95,-43,95,95,]),'CTE_INT':([28,58,84,85,95,98,99,103,104,106,110,117,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,157,158,159,167,168,179,180,197,198,199,209,],[44,100,100,100,100,100,100,100,100,100,100,165,100,-86,100,-89,100,-92,-93,100,-96,-97,-98,-99,100,-102,-103,100,-106,-107,-108,100,-81,100,100,-59,100,100,-43,100,205,100,]),'C_CBRACKET':([30,45,46,47,53,54,55,77,78,79,80,81,82,83,155,195,196,200,202,206,],[-118,77,-118,-5,-49,-50,-51,-3,-4,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'RETURN':([30,46,53,54,55,77,79,80,81,82,83,155,195,196,200,202,206,],[58,58,-49,-50,-51,-3,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'READ':([30,46,53,54,55,77,79,80,81,82,83,155,195,196,200,202,206,],[59,59,-49,-50,-51,-3,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'WRITE':([30,46,53,54,55,77,79,80,81,82,83,155,195,196,200,202,206,],[60,60,-49,-50,-51,-3,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'IF':([30,46,53,54,55,77,79,80,81,82,83,155,195,196,200,202,206,],[61,61,-49,-50,-51,-3,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'FOR':([30,46,53,54,55,77,79,80,81,82,83,155,195,196,200,202,206,],[63,63,-49,-50,-51,-3,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'WHILE':([30,46,53,54,55,77,79,80,81,82,83,155,195,196,200,202,206,],[66,66,-49,-50,-51,-3,-44,-45,-46,-47,-48,-75,-118,-78,-70,-73,-72,]),'C_PARENTHESIS':([31,64,65,69,70,87,88,89,90,91,92,93,94,96,97,100,101,109,113,114,115,116,120,121,122,142,143,144,145,146,147,148,149,150,151,152,153,154,156,164,166,169,170,171,172,173,174,175,187,188,191,192,193,194,207,211,],[68,-36,-37,111,-29,-83,-84,-87,-90,-94,-100,-104,-109,-118,-112,-116,-117,-37,-22,-23,-24,-25,166,-56,-58,175,-111,-115,-113,-114,176,-62,178,-65,-66,-69,181,-71,182,-30,-54,-85,-88,-91,-95,-101,-105,-110,-40,-42,-57,-63,-67,-68,-39,-38,]),'C_ABRACKET':([44,64,65,92,93,94,96,97,100,101,143,144,145,146,160,165,166,173,174,175,187,188,204,205,207,210,211,],[76,-36,-37,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,188,190,-54,-101,-105,-110,-40,-42,188,208,-39,188,-38,]),'ASSIGN':([56,64,65,108,109,187,188,207,211,],[84,-36,-37,159,-37,-40,-42,-39,-38,]),'PLUS':([58,64,65,84,85,92,93,94,95,96,97,100,101,103,104,106,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,157,158,159,166,167,168,174,175,179,180,187,188,197,198,207,209,211,],[98,-36,-37,98,98,136,-104,-109,98,-118,-112,-116,-117,98,98,98,98,98,-86,98,-89,98,-92,-93,98,-96,-97,-98,-99,98,-102,-103,98,-106,-107,-108,-111,-115,-113,-114,98,-81,98,-54,98,-59,-105,-110,98,98,-40,-42,-43,98,-39,98,-38,]),'MINUS':([58,64,65,84,85,92,93,94,95,96,97,100,101,103,104,106,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,157,158,159,166,167,168,174,175,179,180,187,188,197,198,207,209,211,],[99,-36,-37,99,99,137,-104,-109,99,-118,-112,-116,-117,99,99,99,99,99,-86,99,-89,99,-92,-93,99,-96,-97,-98,-99,99,-102,-103,99,-106,-107,-108,-111,-115,-113,-114,99,-81,99,-54,99,-59,-105,-110,99,99,-40,-42,-43,99,-39,99,-38,]),'CTE_FLOAT':([58,84,85,95,98,99,103,104,106,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,157,158,159,167,168,179,180,197,198,209,],[101,101,101,101,101,101,101,101,101,101,101,-86,101,-89,101,-92,-93,101,-96,-97,-98,-99,101,-102,-103,101,-106,-107,-108,101,-81,101,101,-59,101,101,-43,101,101,]),'TIMES':([64,65,93,94,96,97,100,101,143,144,145,146,166,175,187,188,207,211,],[-36,-37,139,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-110,-40,-42,-39,-38,]),'DIVIDE':([64,65,93,94,96,97,100,101,143,144,145,146,166,175,187,188,207,211,],[-36,-37,140,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-110,-40,-42,-39,-38,]),'MODULE':([64,65,93,94,96,97,100,101,143,144,145,146,166,175,187,188,207,211,],[-36,-37,141,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-110,-40,-42,-39,-38,]),'GREATER':([64,65,91,92,93,94,96,97,100,101,143,144,145,146,166,173,174,175,187,188,207,211,],[-36,-37,131,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-101,-105,-110,-40,-42,-39,-38,]),'LESSER':([64,65,91,92,93,94,96,97,100,101,143,144,145,146,166,173,174,175,187,188,207,211,],[-36,-37,132,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-101,-105,-110,-40,-42,-39,-38,]),'GREATER_EQUAL':([64,65,91,92,93,94,96,97,100,101,143,144,145,146,166,173,174,175,187,188,207,211,],[-36,-37,133,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-101,-105,-110,-40,-42,-39,-38,]),'LESSER_EQUAL':([64,65,91,92,93,94,96,97,100,101,143,144,145,146,166,173,174,175,187,188,207,211,],[-36,-37,134,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-101,-105,-110,-40,-42,-39,-38,]),'EQUAL':([64,65,90,91,92,93,94,96,97,100,101,143,144,145,146,166,172,173,174,175,187,188,207,211,],[-36,-37,128,-94,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-95,-101,-105,-110,-40,-42,-39,-38,]),'NOT_EQUAL':([64,65,90,91,92,93,94,96,97,100,101,143,144,145,146,166,172,173,174,175,187,188,207,211,],[-36,-37,129,-94,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-95,-101,-105,-110,-40,-42,-39,-38,]),'AND':([64,65,89,90,91,92,93,94,96,97,100,101,143,144,145,146,166,171,172,173,174,175,187,188,207,211,],[-36,-37,126,-90,-94,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-91,-95,-101,-105,-110,-40,-42,-39,-38,]),'OR':([64,65,88,89,90,91,92,93,94,96,97,100,101,143,144,145,146,166,170,171,172,173,174,175,187,188,207,211,],[-36,-37,124,-87,-90,-94,-100,-104,-109,-118,-112,-116,-117,-111,-115,-113,-114,-54,-88,-91,-95,-101,-105,-110,-40,-42,-39,-38,]),'TO':([64,65,87,88,89,90,91,92,93,94,96,97,100,101,107,143,144,145,146,166,169,170,171,172,173,174,175,185,186,187,188,207,211,],[-36,-37,-83,-84,-87,-90,-94,-100,-104,-109,-118,-112,-116,-117,158,-111,-115,-113,-114,-54,-85,-88,-91,-95,-101,-105,-110,-79,-80,-40,-42,-39,-38,]),'ELSE':([77,195,],[-3,203,]),'CTE_STRING':([103,179,180,],[152,152,152,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion_global':([4,],[5,]),'declaracion':([4,7,111,],[6,13,162,]),'declaracion_base':([4,7,111,],[7,7,7,]),'funcion':([5,10,],[9,19,]),'funcion_base':([5,10,],[10,10,]),'epsilon':([5,10,30,46,96,111,195,],[11,11,47,47,144,163,202,]),'declaracion_prime':([8,27,],[14,43,]),'declaracion_variable':([8,27,],[15,15,]),'main':([9,],[17,]),'funcion_ident':([12,],[20,]),'bloque':([17,105,161,181,183,201,],[29,155,189,195,196,206,]),'declaracion_tipo':([26,],[38,]),'bloque_prime':([30,46,],[45,78,]),'estatuto':([30,46,],[46,46,]),'asignacion':([30,46,],[48,48,]),'llamada':([30,46,58,84,85,95,103,104,106,110,123,125,127,130,135,138,157,159,167,179,180,198,209,],[49,49,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'retorno':([30,46,],[50,50,]),'lectura':([30,46,],[51,51,]),'escritura':([30,46,],[52,52,]),'decision':([30,46,],[53,53,]),'while':([30,46,],[54,54,]),'for':([30,46,],[55,55,]),'variable':([30,46,58,63,84,85,95,102,103,104,106,110,123,125,127,130,135,138,157,159,167,177,179,180,198,209,],[56,56,94,108,94,94,94,148,94,94,94,94,94,94,94,94,94,94,94,94,94,148,94,94,94,94,]),'function_id':([30,46,58,84,85,95,103,104,106,110,123,125,127,130,135,138,157,159,167,179,180,198,209,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'while_prime':([30,46,],[62,62,]),'var_array':([30,46,58,63,84,85,95,102,103,104,106,110,123,125,127,130,135,138,157,159,167,177,179,180,198,209,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'arr_id':([30,46,58,63,84,85,95,102,103,104,106,110,123,125,127,130,135,138,157,159,167,177,179,180,198,209,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'funcion_prime':([32,112,],[69,164,]),'param_tipo':([32,112,],[70,70,]),'expr':([58,84,95,103,104,106,159,179,180,],[86,119,142,150,154,156,186,150,150,]),'or':([58,84,95,103,104,106,123,159,179,180,],[87,87,87,87,87,87,169,87,87,87,]),'and':([58,84,95,103,104,106,123,125,159,179,180,],[88,88,88,88,88,88,88,170,88,88,88,]),'equal':([58,84,95,103,104,106,123,125,159,179,180,],[89,89,89,89,89,89,89,89,89,89,89,]),'compare':([58,84,95,103,104,106,123,125,127,159,179,180,],[90,90,90,90,90,90,90,90,171,90,90,90,]),'exp':([58,84,85,95,103,104,106,110,123,125,127,130,135,157,159,167,179,180,198,209,],[91,91,122,91,91,91,91,160,91,91,91,172,173,184,91,122,91,91,204,210,]),'termino':([58,84,85,95,103,104,106,110,123,125,127,130,135,138,157,159,167,179,180,198,209,],[92,92,92,92,92,92,92,92,92,92,92,92,92,174,92,92,92,92,92,92,92,]),'factor':([58,84,85,95,103,104,106,110,123,125,127,130,135,138,157,159,167,179,180,198,209,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'cte':([58,84,85,95,98,99,103,104,106,110,123,125,127,130,135,138,157,159,167,179,180,198,209,],[97,97,97,97,145,146,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'while_expr':([62,],[105,]),'for_asignacion':([63,],[107,]),'asignacion_expr':([84,],[118,]),'llamada_prime':([85,167,],[120,191,]),'llamada_exp':([85,167,],[121,121,]),'or_operador':([88,],[123,]),'and_operador':([89,],[125,]),'equal_operador':([90,],[127,]),'compare_operador':([91,],[130,]),'exp_operador':([92,],[135,]),'termino_operador':([93,],[138,]),'retorno_llamada':([96,],[143,]),'lectura_prime':([102,177,],[147,192,]),'escritura_prime':([103,179,180,],[149,193,194,]),'escritura_string':([103,179,180,],[151,151,151,]),'decision_expr':([104,],[153,]),'for_to':([107,],[157,]),'declaracion_funcion':([111,],[161,]),'llamada_comma':([121,],[167,]),'for_exp':([157,],[183,]),'for_asignacion_expr':([159,],[185,]),'arr_close_bracket':([160,204,210,],[187,207,211,]),'arr_open_bracket':([187,207,],[198,209,]),'else':([195,],[200,]),'else_prime':([195,],[201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON declaracion_global funcion main bloque','programa',7,'p_programa','Parser.py',9),
  ('main -> MAIN O_PARENTHESIS C_PARENTHESIS','main',3,'p_main','Parser.py',24),
  ('bloque -> O_CBRACKET bloque_prime C_CBRACKET','bloque',3,'p_bloque','Parser.py',37),
  ('bloque_prime -> estatuto bloque_prime','bloque_prime',2,'p_bloque_prime','Parser.py',43),
  ('bloque_prime -> epsilon','bloque_prime',1,'p_bloque_prime','Parser.py',44),
  ('declaracion_funcion -> declaracion','declaracion_funcion',1,'p_declaracion_funcion','Parser.py',51),
  ('declaracion_funcion -> epsilon','declaracion_funcion',1,'p_declaracion_funcion','Parser.py',52),
  ('declaracion_global -> declaracion','declaracion_global',1,'p_declaracion_global','Parser.py',61),
  ('declaracion -> declaracion_base','declaracion',1,'p_declaracion','Parser.py',69),
  ('declaracion -> declaracion_base declaracion','declaracion',2,'p_declaracion','Parser.py',70),
  ('declaracion_base -> LET declaracion_prime COLON declaracion_tipo SEMICOLON','declaracion_base',5,'p_declaracion_base','Parser.py',76),
  ('declaracion_prime -> declaracion_variable','declaracion_prime',1,'p_declaracion_prime','Parser.py',82),
  ('declaracion_prime -> declaracion_variable COMMA declaracion_prime','declaracion_prime',3,'p_declaracion_prime','Parser.py',83),
  ('declaracion_variable -> ID O_ABRACKET CTE_INT C_ABRACKET O_ABRACKET CTE_INT C_ABRACKET O_ABRACKET CTE_INT C_ABRACKET','declaracion_variable',10,'p_declaracion_variable','Parser.py',90),
  ('declaracion_variable -> ID O_ABRACKET CTE_INT C_ABRACKET O_ABRACKET CTE_INT C_ABRACKET','declaracion_variable',7,'p_declaracion_variable','Parser.py',91),
  ('declaracion_variable -> ID O_ABRACKET CTE_INT C_ABRACKET','declaracion_variable',4,'p_declaracion_variable','Parser.py',92),
  ('declaracion_variable -> ID','declaracion_variable',1,'p_declaracion_variable','Parser.py',93),
  ('declaracion_tipo -> INT','declaracion_tipo',1,'p_declaracion_tipo','Parser.py',113),
  ('declaracion_tipo -> FLOAT','declaracion_tipo',1,'p_declaracion_tipo','Parser.py',114),
  ('declaracion_tipo -> CHAR','declaracion_tipo',1,'p_declaracion_tipo','Parser.py',115),
  ('declaracion_tipo -> STRING','declaracion_tipo',1,'p_declaracion_tipo','Parser.py',116),
  ('param_tipo -> INT ID','param_tipo',2,'p_param_tipo','Parser.py',130),
  ('param_tipo -> FLOAT ID','param_tipo',2,'p_param_tipo','Parser.py',131),
  ('param_tipo -> CHAR ID','param_tipo',2,'p_param_tipo','Parser.py',132),
  ('param_tipo -> STRING ID','param_tipo',2,'p_param_tipo','Parser.py',133),
  ('funcion -> funcion_base funcion','funcion',2,'p_funcion','Parser.py',150),
  ('funcion -> epsilon','funcion',1,'p_funcion','Parser.py',151),
  ('funcion_base -> FUNCTION funcion_ident O_PARENTHESIS funcion_prime C_PARENTHESIS declaracion_funcion bloque','funcion_base',7,'p_funcion_base','Parser.py',157),
  ('funcion_prime -> param_tipo','funcion_prime',1,'p_funcion_prime','Parser.py',167),
  ('funcion_prime -> param_tipo COMMA funcion_prime','funcion_prime',3,'p_funcion_prime','Parser.py',168),
  ('funcion_ident -> VOID ID','funcion_ident',2,'p_funcion_ident','Parser.py',175),
  ('funcion_ident -> INT ID','funcion_ident',2,'p_funcion_ident','Parser.py',176),
  ('funcion_ident -> FLOAT ID','funcion_ident',2,'p_funcion_ident','Parser.py',177),
  ('funcion_ident -> CHAR ID','funcion_ident',2,'p_funcion_ident','Parser.py',178),
  ('funcion_ident -> STRING ID','funcion_ident',2,'p_funcion_ident','Parser.py',179),
  ('variable -> var_array','variable',1,'p_variable','Parser.py',207),
  ('variable -> ID','variable',1,'p_variable','Parser.py',208),
  ('var_array -> arr_id O_ABRACKET exp arr_close_bracket arr_open_bracket exp arr_close_bracket arr_open_bracket exp arr_close_bracket','var_array',10,'p_var_array','Parser.py',228),
  ('var_array -> arr_id O_ABRACKET exp arr_close_bracket arr_open_bracket exp arr_close_bracket','var_array',7,'p_var_array','Parser.py',229),
  ('var_array -> arr_id O_ABRACKET exp arr_close_bracket','var_array',4,'p_var_array','Parser.py',230),
  ('arr_id -> ID','arr_id',1,'p_arr_id','Parser.py',254),
  ('arr_close_bracket -> C_ABRACKET','arr_close_bracket',1,'p_arr_close_bracket','Parser.py',273),
  ('arr_open_bracket -> O_ABRACKET','arr_open_bracket',1,'p_arr_open_bracket','Parser.py',319),
  ('estatuto -> asignacion SEMICOLON','estatuto',2,'p_estatuto','Parser.py',329),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',330),
  ('estatuto -> retorno SEMICOLON','estatuto',2,'p_estatuto','Parser.py',331),
  ('estatuto -> lectura SEMICOLON','estatuto',2,'p_estatuto','Parser.py',332),
  ('estatuto -> escritura SEMICOLON','estatuto',2,'p_estatuto','Parser.py',333),
  ('estatuto -> decision','estatuto',1,'p_estatuto','Parser.py',334),
  ('estatuto -> while','estatuto',1,'p_estatuto','Parser.py',335),
  ('estatuto -> for','estatuto',1,'p_estatuto','Parser.py',336),
  ('asignacion -> variable ASSIGN asignacion_expr','asignacion',3,'p_asignacion','Parser.py',343),
  ('asignacion_expr -> expr','asignacion_expr',1,'p_asignacion_expr','Parser.py',349),
  ('llamada -> function_id O_PARENTHESIS llamada_prime C_PARENTHESIS','llamada',4,'p_llamada','Parser.py',366),
  ('function_id -> ID','function_id',1,'p_function_id','Parser.py',380),
  ('llamada_prime -> llamada_exp','llamada_prime',1,'p_llamada_prime','Parser.py',398),
  ('llamada_prime -> llamada_exp llamada_comma llamada_prime','llamada_prime',3,'p_llamada_prime','Parser.py',399),
  ('llamada_exp -> exp','llamada_exp',1,'p_llamada_exp','Parser.py',409),
  ('llamada_comma -> COMMA','llamada_comma',1,'p_llamada_comma','Parser.py',430),
  ('retorno -> RETURN expr','retorno',2,'p_retorno','Parser.py',439),
  ('lectura -> READ O_PARENTHESIS lectura_prime C_PARENTHESIS','lectura',4,'p_lectura','Parser.py',464),
  ('lectura_prime -> variable','lectura_prime',1,'p_lectura_prime','Parser.py',470),
  ('lectura_prime -> variable COMMA lectura_prime','lectura_prime',3,'p_lectura_prime','Parser.py',471),
  ('escritura -> WRITE O_PARENTHESIS escritura_prime C_PARENTHESIS','escritura',4,'p_escritura','Parser.py',483),
  ('escritura_prime -> expr','escritura_prime',1,'p_escritura_prime','Parser.py',489),
  ('escritura_prime -> escritura_string','escritura_prime',1,'p_escritura_prime','Parser.py',490),
  ('escritura_prime -> expr COMMA escritura_prime','escritura_prime',3,'p_escritura_prime','Parser.py',491),
  ('escritura_prime -> escritura_string COMMA escritura_prime','escritura_prime',3,'p_escritura_prime','Parser.py',492),
  ('escritura_string -> CTE_STRING','escritura_string',1,'p_escritura_string','Parser.py',503),
  ('decision -> IF O_PARENTHESIS decision_expr C_PARENTHESIS bloque else','decision',6,'p_decision','Parser.py',516),
  ('decision_expr -> expr','decision_expr',1,'p_decision_expr','Parser.py',522),
  ('else -> else_prime bloque','else',2,'p_else','Parser.py',540),
  ('else -> epsilon','else',1,'p_else','Parser.py',541),
  ('else_prime -> ELSE','else_prime',1,'p_else_prime','Parser.py',548),
  ('while -> while_prime while_expr bloque','while',3,'p_while','Parser.py',563),
  ('while_prime -> WHILE','while_prime',1,'p_while_prime','Parser.py',577),
  ('while_expr -> O_PARENTHESIS expr C_PARENTHESIS','while_expr',3,'p_while_expr','Parser.py',584),
  ('for -> FOR for_asignacion for_to for_exp bloque','for',5,'p_for','Parser.py',602),
  ('for_asignacion -> variable ASSIGN for_asignacion_expr','for_asignacion',3,'p_for_asignacion','Parser.py',629),
  ('for_asignacion_expr -> expr','for_asignacion_expr',1,'p_for_asignacion_expr','Parser.py',635),
  ('for_to -> TO','for_to',1,'p_for_to','Parser.py',655),
  ('for_exp -> exp','for_exp',1,'p_for_exp','Parser.py',662),
  ('expr -> or','expr',1,'p_expr','Parser.py',695),
  ('or -> and','or',1,'p_or','Parser.py',702),
  ('or -> and or_operador or','or',3,'p_or','Parser.py',703),
  ('or_operador -> OR','or_operador',1,'p_or_operador','Parser.py',737),
  ('and -> equal','and',1,'p_and','Parser.py',745),
  ('and -> equal and_operador and','and',3,'p_and','Parser.py',746),
  ('and_operador -> AND','and_operador',1,'p_and_operador','Parser.py',780),
  ('equal -> compare','equal',1,'p_equal','Parser.py',788),
  ('equal -> compare equal_operador compare','equal',3,'p_equal','Parser.py',789),
  ('equal_operador -> EQUAL','equal_operador',1,'p_equal_operador','Parser.py',823),
  ('equal_operador -> NOT_EQUAL','equal_operador',1,'p_equal_operador','Parser.py',824),
  ('compare -> exp','compare',1,'p_compare','Parser.py',832),
  ('compare -> exp compare_operador exp','compare',3,'p_compare','Parser.py',833),
  ('compare_operador -> GREATER','compare_operador',1,'p_compare_operador','Parser.py',867),
  ('compare_operador -> LESSER','compare_operador',1,'p_compare_operador','Parser.py',868),
  ('compare_operador -> GREATER_EQUAL','compare_operador',1,'p_compare_operador','Parser.py',869),
  ('compare_operador -> LESSER_EQUAL','compare_operador',1,'p_compare_operador','Parser.py',870),
  ('exp -> termino','exp',1,'p_exp','Parser.py',878),
  ('exp -> termino exp_operador exp','exp',3,'p_exp','Parser.py',879),
  ('exp_operador -> PLUS','exp_operador',1,'p_exp_operador','Parser.py',916),
  ('exp_operador -> MINUS','exp_operador',1,'p_exp_operador','Parser.py',917),
  ('termino -> factor','termino',1,'p_termino','Parser.py',925),
  ('termino -> factor termino_operador termino','termino',3,'p_termino','Parser.py',926),
  ('termino_operador -> TIMES','termino_operador',1,'p_termino_operador','Parser.py',961),
  ('termino_operador -> DIVIDE','termino_operador',1,'p_termino_operador','Parser.py',962),
  ('termino_operador -> MODULE','termino_operador',1,'p_termino_operador','Parser.py',963),
  ('factor -> variable','factor',1,'p_factor','Parser.py',971),
  ('factor -> O_PARENTHESIS expr C_PARENTHESIS','factor',3,'p_factor','Parser.py',972),
  ('factor -> llamada retorno_llamada','factor',2,'p_factor','Parser.py',973),
  ('factor -> cte','factor',1,'p_factor','Parser.py',974),
  ('factor -> PLUS cte','factor',2,'p_factor','Parser.py',975),
  ('factor -> MINUS cte','factor',2,'p_factor','Parser.py',976),
  ('retorno_llamada -> epsilon','retorno_llamada',1,'p_retorno_llamada','Parser.py',983),
  ('cte -> CTE_INT','cte',1,'p_cte','Parser.py',993),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','Parser.py',994),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','Parser.py',1013),
]
